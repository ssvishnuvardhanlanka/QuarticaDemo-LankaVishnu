{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\quarticademo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const API_KEY = \"8c17184c\";\n\n  // const fetchMovies = async () => {\n  //   try {\n  //     const response = await fetch(`http://www.omdbapi.com/?s=${searchText}&apikey=${API_KEY}`);\n  //     const data = await response.json();\n  //     if (data.Search) {\n  //       setMovies(data.Search);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error fetching movies:', error);\n  //   }\n  // };\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?s=${searchText}&apikey=${API_KEY}`);\n      const data = await response.json();\n      if (data.Search) {\n        setMovies(data.Search.map(movie => ({\n          ...movie,\n          imdbRating: movie.imdbRating || 'N/A',\n          Released: movie.Released || 'N/A',\n          Genre: movie.Genre || 'N/A',\n          Director: movie.Director || 'N/A',\n          Actors: movie.Actors || 'N/A'\n        })));\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n  const handleMovieClick = imdbID => {\n    if (selectedMovie === imdbID) {\n      setSelectedMovie(null);\n    } else {\n      setSelectedMovie(imdbID);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Movie Search App \", movies.Title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchText,\n        onChange: e => setSearchText(e.target.value),\n        placeholder: \"Enter movie title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        movie: movie,\n        selected: selectedMovie === movie.imdbID,\n        onClick: () => handleMovieClick(movie.imdbID)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ueyw6hyb7ml1KMoqmIc7aL0UbVo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Movie","jsxDEV","_jsxDEV","App","_s","searchText","setSearchText","movies","setMovies","selectedMovie","setSelectedMovie","API_KEY","fetchMovies","response","fetch","data","json","Search","map","movie","imdbRating","Released","Genre","Director","Actors","error","console","handleMovieClick","imdbID","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","handleSearch","selected","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Documents/quarticademo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Movie from './Movie';\n\nconst App = () => {\n  const [searchText, setSearchText] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const API_KEY = \"8c17184c\";\n\n  // const fetchMovies = async () => {\n  //   try {\n  //     const response = await fetch(`http://www.omdbapi.com/?s=${searchText}&apikey=${API_KEY}`);\n  //     const data = await response.json();\n  //     if (data.Search) {\n  //       setMovies(data.Search);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error fetching movies:', error);\n  //   }\n  // };\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?s=${searchText}&apikey=${API_KEY}`);\n      const data = await response.json();\n      if (data.Search) {\n        setMovies(data.Search.map((movie) => ({\n          ...movie,\n          imdbRating: movie.imdbRating || 'N/A',\n          Released: movie.Released || 'N/A',\n          Genre: movie.Genre || 'N/A',\n          Director: movie.Director || 'N/A',\n          Actors: movie.Actors || 'N/A',\n        })));\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n\n  const handleMovieClick = (imdbID) => {\n    if (selectedMovie === imdbID) {\n      setSelectedMovie(null);\n    } else {\n      setSelectedMovie(imdbID);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Movie Search App {movies.Title}</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          placeholder=\"Enter movie title\"\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <div>\n        {movies.map((movie) => (\n          <Movie\n            key={movie.imdbID}\n            movie={movie}\n            selected={selectedMovie === movie.imdbID}\n            onClick={() => handleMovieClick(movie.imdbID)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}