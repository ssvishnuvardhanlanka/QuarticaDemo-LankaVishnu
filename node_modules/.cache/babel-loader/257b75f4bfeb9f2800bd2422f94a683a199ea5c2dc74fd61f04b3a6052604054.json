{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Documents\\\\quarticademo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Movie from './Movie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const API_KEY = '8c17184c';\n  const fetchMovieDetails = async () => {\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?t=${searchText}&apikey=${API_KEY}`);\n      const data = await response.json();\n      if (data.Response === 'True') {\n        setMovieDetails({\n          ...data,\n          imdbRating: data.imdbRating || 'N/A',\n          Released: data.Released || 'N/A',\n          Genre: data.Genre || 'N/A',\n          Director: data.Director || 'N/A',\n          Actors: data.Actors || 'N/A',\n          Runtime: data.Runtime || 'N/A',\n          Language: data.Language || 'N/A',\n          Country: data.Country || 'N/A',\n          Awards: data.Awards || 'N/A',\n          Writer: data.Writer || 'N/A'\n        });\n        setError(null);\n      } else {\n        setMovieDetails(null);\n        setError(data.Error || 'Movie not found!');\n      }\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      setMovieDetails(null);\n      setError('An error occurred while fetching movie details.');\n    }\n  };\n  const handleSearch = () => {\n    fetchMovieDetails();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Search App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchText,\n        onChange: e => setSearchText(e.target.value),\n        placeholder: \"Enter movie title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), movieDetails && !error && /*#__PURE__*/_jsxDEV(Movie, {\n      movie: movieDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EBTPA6+Oa2h7IDyVKyu40JWDjME=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Movie","jsxDEV","_jsxDEV","App","_s","searchText","setSearchText","movieDetails","setMovieDetails","error","setError","API_KEY","fetchMovieDetails","response","fetch","data","json","Response","imdbRating","Released","Genre","Director","Actors","Runtime","Language","Country","Awards","Writer","Error","console","handleSearch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","movie","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Documents/quarticademo/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Movie from './Movie';\nimport './App.css';\n\nconst App = () => {\n  const [searchText, setSearchText] = useState('');\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [error, setError] = useState(null);\n\n  const API_KEY = '8c17184c';\n\n  const fetchMovieDetails = async () => {\n    try {\n      const response = await fetch(`http://www.omdbapi.com/?t=${searchText}&apikey=${API_KEY}`);\n      const data = await response.json();\n\n      if (data.Response === 'True') {\n        setMovieDetails({\n          ...data,\n          imdbRating: data.imdbRating || 'N/A',\n          Released: data.Released || 'N/A',\n          Genre: data.Genre || 'N/A',\n          Director: data.Director || 'N/A',\n          Actors: data.Actors || 'N/A',\n          Runtime: data.Runtime || 'N/A',\n          Language: data.Language || 'N/A',\n          Country: data.Country || 'N/A',\n          Awards: data.Awards || 'N/A',\n          Writer: data.Writer || 'N/A',\n        });\n        setError(null);\n      } else {\n        setMovieDetails(null);\n        setError(data.Error || 'Movie not found!');\n      }\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      setMovieDetails(null);\n      setError('An error occurred while fetching movie details.');\n    }\n  };\n\n\n  const handleSearch = () => {\n    fetchMovieDetails();\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Movie Search App</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          placeholder=\"Enter movie title\"\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n      {movieDetails && !error && (\n        <Movie movie={movieDetails} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}